script
  $(function() {
  
    var MAX_USERS = 5;
    var users = [];
    var baseAmount = null;
    var currentUserIndex = -1;
    var currentUserVisible = false;
    window.hasTooltip = true;
    var hasUsers = false;
    var itemHeight = 60;
  
    // FUNCTIONS
    function getUserInfo() {
      $.ajax({
        type: "POST",
        url: "/users/" + buttonUuid,
        data: {_csrf: sessionCsrf},
        success: function(data) {
          if (!data.users) {
            // something went wrong
          } else {
            users = data.users;
            populateUsers();
          }
        },
        dataType: "json",
        async: false
      });
    }
  
    function sortFunction(a, b) {
      if (a.funded == 0 && b.funded == 0) return(b.unfunded - a.unfunded);
      else return(b.funded - a.funded);
    }
  
    function populateUsers() {
  
      var usersLoaded = 0;
      users.sort(sortFunction);
    
      for (i in users) {
  
        var user = users[i];
        var position = i;
        
        // DEBUG
        user.message = "This is a dummy message. Please take me out before pushing!";
      
        if (user.currentUser) {
          currentUserIndex = i;
          if (baseAmount === null) baseAmount = user.unfunded;
          if (i >= MAX_USERS || (user.funded == 0 && user.unfunded == 0)) {
            position = (MAX_USERS + 1);
            usersLoaded--;
          } else {
            currentUserVisible = true;
          }
        } else if (i >= MAX_USERS || (user.funded == 0 && user.unfunded == 0)) {
          continue;
        }
                        
        if (user.profileUrl) {
          var $itemImage = $('<a />', {
            target: '_blank',
            href: user.profileUrl
          });
          var $itemTitle = $('<a />', {
            target: '_blank',
            href: user.profileUrl
          });
        } else {
          var $itemImage = $('<div />');
          var $itemTitle = $('<div />');
        }
                
        $itemImage.addClass('item-image').css(
          'background-image',
          user.pictureUrl ? 'url(' + user.pictureUrl + ')' : 'url("' + assetsUrlBase + '/users/pictures/no_pic.png")'
        );
        
        if (user.currentUser) {
          $('#input-image').replaceWith($itemImage.clone().removeClass('item-image').attr('id', 'input-image'));
        }
        
        var title = (user.currentUser ? "You" : user.name) 
          + " (pledged $" + ((user.funded + user.unfunded)/ 100000000).toFixed(2) + ")";
        $itemTitle.addClass('item-title').text(title);
        
        var $itemBody = $('<div />', {
          class: 'item-body'
        }).text(user.message);
        
        var $itemText = $('<div />', { class: 'item-text' }).append($itemTitle, $itemBody);
        
        var $feedItem = $('<div />', {
          class: 'feed-item',
          'data-position': i,
          'css': {
            top: itemHeight * position
          }
        }).append($itemImage, $itemText);
        
        $('#feed-container').append($feedItem);
        $feedItem.delay(500 + i * 500).fadeIn('slow');
        users[i].item = $feedItem;
        users[i].position = position;
        usersLoaded++;
      }
      
      $('#call-item').hide();      
      
      if (usersLoaded < MAX_USERS && !currentUserVisible) {
        $('#call-item').css({top: usersLoaded * itemHeight}).delay(500 + usersLoaded * 500).fadeIn('slow');
      }
    }
  
    function repositionUsers() {
      users.sort(sortFunction);
    
      for (i in users) {
        var user = users[i];
        if (user.currentUser) {
          currentUserVisible = true;
          currentUserIndex = i;
        }
        if (user.funded != 0 || user.unfunded != 0) {
          if (user.position != i) {
            user.item.animate({ top: itemHeight * i }, 500);
            user.position = i;
            user.item.attr('data-position', i);
          }
        } else {
          user.item.css({top: itemHeight * MAX_USERS + 1});
          currentUserVisible = false;
        }
        if (currentUserVisible) {
          $('#call-item').hide();
        } else {
          $('#call-item').show();
        }
      }
    }
  
    $('#outer-container').on({
      mouseenter: function() {
        if ($(this).attr('id') == 'input-image') {
          if (currentUserIndex != -1) {
            var $item = $(this);
            var user = users[currentUserIndex];
          } else {
            return;
          }
        } else {
          var $item = $(this).parent();
          if ($item.attr('id') == "call-item") return;
          var user = users[$item.attr('data-position')];
        }
        var userData = {
          left: $item.offset().left,
          top: $item.offset().top + $item.height(),
          name: user.name,
          url: user.profileUrl,
          funded: user.funded,
          unfunded: user.unfunded,
          currentUser: user.currentUser
        }
        $.postMessage(
          JSON.stringify({command: 'user', user: userData}),
          parentUrl
        );
      },
      mouseleave: function() {
        $.postMessage(
          JSON.stringify({command: 'hide'}),
          parentUrl
        );
      }, 
    }, '.item-image, #input-image');
  
    $('#button-wrapper').bind({
      mouseenter: function() {
        $.postMessage(
          JSON.stringify({command: 'button', uuid: buttonUuid}),
          parentUrl
        );
      },
      mouseleave: function() {
        $.postMessage(
          JSON.stringify({command: 'hide'}),
          parentUrl
        );
      }
    });
    
    $("form").ajaxSuccess(function(event, request, settings) {
      if (settings.url.indexOf('button') != -1) {
        if (currentUserIndex >= 0) users[currentUserIndex].unfunded = baseAmount + totalAmount * 1000000;
        repositionUsers();
      }
    });
    
    var inputDefaultText = $("#input-text").val();
    
    $("textarea#input-text").focusin(function() {
      if ($(this).val() == inputDefaultText) $(this).val('').css('display', 'block');
    }).focusout(function() {
      if (!/[^\s]/.test($(this).val())) $(this).val(inputDefaultText);
    });
    
    getUserInfo();
  
    // DEBUG
    // setTimeout(function() {
    //   repositionUsers();
    // }, 5000);
  });